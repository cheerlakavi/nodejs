name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  # Job to run tests
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'  # Specify your Node.js version

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

  # Job to build and push Docker image
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test  # Make sure tests run before deploying

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t your-dockerhub-username/your-app:${{ github.sha }} .
    
    - name: Push Docker image to Docker Hub
      run: |
        docker push your-dockerhub-username/your-app:${{ github.sha }}

    - name: Set up Kubeconfig
      run: |
        echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
        export KUBECONFIG=kubeconfig

    - name: Deploy to Kubernetes
      run: |
        kubectl set image deployment/your-app your-app=your-dockerhub-username/your-app:${{ github.sha }}
        kubectl rollout status deployment/your-app

  # Job to send notifications (success or failure)
  notify:
    runs-on: ubuntu-latest
    needs: build-and-deploy

    steps:
    - name: Notify on success or failure
      if: success()
      run: echo "Deployment successful!"
    
    - name: Notify on failure
      if: failure()
      run: echo "Deployment failed!" # You can replace this with more complex notification logic like Slack, Email, etc.
